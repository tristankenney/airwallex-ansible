#!/bin/bash
#
# ARG_OPTIONAL_SINGLE([aws-access-key-id],[],[AWS Access Key to provision])
# ARG_OPTIONAL_SINGLE([aws-access-secret-key],[],[AWS Secret Key to provision])
# ARG_OPTIONAL_SINGLE([ssh],[],[Directory containing SSH keys to use to authenticate])
# ARG_HELP([Helper script to run example])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.6.1 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

begins_with_short_option()
{
	local first_option all_short_options
	all_short_options='h'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}



# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_aws_access_key_id=
_arg_aws_access_secret_key=
_arg_ssh=

print_help ()
{
	printf '%s\n' "Helper script to run example"
	printf 'Usage: %s [--aws-access-key-id <arg>] [--aws-access-secret-key <arg>] [--ssh <arg>] [-h|--help]\n' "$0"
	printf '\t%s\n' "--aws-access-key-id: AWS Access Key to provision (no default)"
	printf '\t%s\n' "--aws-access-secret-key: AWS Secret Key to provision (no default)"
	printf '\t%s\n' "--ssh: Directory containing SSH keys to use to authenticate (no default)"
	printf '\t%s\n' "-h,--help: Prints help"
}

parse_commandline ()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			--aws-access-key-id)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_aws_access_key_id="$2"
				shift
				;;
			--aws-access-key-id=*)
				_arg_aws_access_key_id="${_key##--aws-access-key-id=}"
				;;
			--aws-access-secret-key)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_aws_access_secret_key="$2"
				shift
				;;
			--aws-access-secret-key=*)
				_arg_aws_access_secret_key="${_key##--aws-access-secret-key=}"
				;;
			--ssh)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_ssh="$2"
				shift
				;;
			--ssh=*)
				_arg_ssh="${_key##--ssh=}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"


if [ -z "$_arg_ssh" ] || [ -z "$_arg_aws_access_key_id" ] || [ -z "$_arg_aws_access_secret_key" ] ; then
    print_help
    exit 1
fi


docker run -it \
    -v $(pwd):/tmp \
    -v ${_arg_ssh}:/root/.ssh \
    -e AWS_ACCESS_KEY_ID=$_arg_aws_access_key_id \
    -e AWS_SECRET_ACCESS_KEY=$_arg_aws_access_secret_key \
    airwallex-devops-test airwallex.yml